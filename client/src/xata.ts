// Generated by Xata Codegen 0.29.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "incidencia",
    columns: [
      { name: "dia", type: "datetime", notNull: true, defaultValue: "now" },
      { name: "institucion", type: "multiple" },
      { name: "situacion", type: "multiple" },
      {
        name: "descripcion",
        type: "text",
        notNull: true,
        defaultValue: "Describe la situaci√≥n",
      },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Incidencia = InferredTypes["incidencia"];
export type IncidenciaRecord = Incidencia & XataRecord;

export type DatabaseSchema = {
  incidencia: IncidenciaRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Alberto-Guerrero-Covarrubias-s-workspace-rl3q97.us-east-1.xata.sh/db/CDN-MS-monitoreoDB",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
